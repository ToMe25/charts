{{- if .Values.postgres.localDev.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "synapse.fullname" . }}-dev-postgres
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
stringData:
  POSTGRES_PASSWORD: {{ .Values.postgres.password | quote }}
  POSTGRES_USER: {{ .Values.postgres.user | quote }}
  POSTGRES_DB: defaultdb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "synapse.fullname" . }}-postgres
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ include "synapse.fullname" . }}-dev-postgres-headless
  selector:
    matchLabels:
      {{- include "synapse.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "synapse.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "synapse.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.postgres.localDev.image.repository }}:{{ .Values.postgres.localDev.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-data
          envFrom:
          - secretRef:
              name: {{ include "synapse.fullname" . }}-dev-postgres
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "{{ .Values.storageClass }}"
      resources:
        requests:
          storage: "{{ .Values.postgres.localDev.storageSize }}"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "synapse.fullname" . }}-dev-postgres
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    {{- include "synapse.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
{{- end }}
