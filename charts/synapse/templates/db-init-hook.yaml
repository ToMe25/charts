{{- if .Values.postgres.init.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation,hook-failed"
    "helm.sh/hook-weight": "-100"
  name: {{ include "synapse.fullname" . }}-db-init
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "synapse.fullname" . }}-db-init
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
    app.kubernetes.io/component: db-init
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    "helm.sh/hook-weight": "-100"
data:
  init.sql: |
    CREATE DATABASE {{ .Values.postgres.database }} OWNER {{ .Values.postgres.user }} LC_COLLATE "C" LC_CTYPE "C" TEMPLATE template0;
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "synapse.fullname" . }}-db-init
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
    app.kubernetes.io/component: db-init
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    "helm.sh/hook-weight": "-100"
stringData:
  PGUSER: {{ .Values.postgres.init.user | quote }}
  PGPASSWORD: {{ .Values.postgres.init.password | quote }}
  {{- if .Values.postgres.localDev.enabled }}
  PGHOST: "{{ include "synapse.fullname" . }}-dev-postgres"
  PGPORT: "5432"
  {{- else }}
  PGHOST: {{ .Values.postgres.host | quote }}
  PGPORT: {{ .Values.postgres.port | quote }}
  {{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "synapse.fullname" . }}-db-init
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
    app.kubernetes.io/component: db-init
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    "helm.sh/hook-weight": "-70"
spec:
  template:
    metadata:
      name: {{ include "synapse.fullname" . }}-db-init
      labels:
        {{- include "synapse.labels" . | nindent 8 }}
        app.kubernetes.io/component: db-init
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "synapse.fullname" . }}-db-init
      containers:
      - name: db-init
        image: "{{ .Values.postgres.init.image.repository }}:{{ .Values.postgres.init.image.tag }}"
        envFrom:
        - secretRef:
            name: {{ include "synapse.fullname" . }}-db-init
        command: ["psql"]
        args:
          - -d
          - "{{ .Values.postgres.init.database }}"
          - -f
          - "/scripts/init.sql"
        volumeMounts:
        - mountPath: /scripts
          name: scripts
      volumes:
      - name: scripts
        configMap:
          name: {{ include "synapse.fullname" . }}-db-init
{{- end }}
